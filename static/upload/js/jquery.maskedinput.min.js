
/* Ammina JS file original /bitrix/templates/avtoshkola/js/jquery.maskedinput.min.js */
(function (y) {
    function e() {
        var e = document.createElement("input"), t = "onpaste";
        return e.setAttribute(t, ""), "function" == typeof e[t] ? "paste" : "input"
    }

    var r, x = e() + ".mask", t = navigator.userAgent, R = /iphone/i.test(t), S = /android/i.test(t);
    y.mask = {definitions: {9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]"}, dataName: "rawMaskFn", placeholder: "_"}, y.fn.extend({
        caret: function (e, t) {
            var n;
            if (0 !== this.length && !this.is(":hidden")) return "number" == typeof e ? (t = "number" == typeof t ? t : e, this.each(function () {
                this.setSelectionRange ? this.setSelectionRange(e, t) : this.createTextRange && (n = this.createTextRange(), n.collapse(!0), n.moveEnd("character", t), n.moveStart("character", e), n.select())
            })) : (this[0].setSelectionRange ? (e = this[0].selectionStart, t = this[0].selectionEnd) : document.selection && document.selection.createRange && (n = document.selection.createRange(), e = 0 - n.duplicate().moveStart("character", -1e5), t = e + n.text.length), {
                begin: e,
                end: t
            })
        }, unmask: function () {
            return this.trigger("unmask")
        }, mask: function (n, p) {
            var e, a, g, v, k, b;
            return !n && this.length > 0 ? (e = y(this[0]), e.data(y.mask.dataName)()) : (p = y.extend({
                placeholder: y.mask.placeholder,
                completed: null
            }, p), a = y.mask.definitions, g = [], v = b = n.length, k = null, y.each(n.split(""), function (e, t) {
                "?" == t ? (b--, v = e) : a[t] ? (g.push(RegExp(a[t])), null === k && (k = g.length - 1)) : g.push(null)
            }), this.trigger("unmask").each(function () {
                function o(e) {
                    for (; b > ++e && !g[e];) ;
                    return e
                }

                function i(e) {
                    for (; --e >= 0 && !g[e];) ;
                    return e
                }

                function c(e, t) {
                    var n, a;
                    if (!(0 > e)) {
                        for (n = e, a = o(t); b > n; n++) if (g[n]) {
                            if (!(b > a && g[n].test(d[a]))) break;
                            d[n] = d[a], d[a] = p.placeholder, a = o(a)
                        }
                        u(), h.caret(Math.max(k, e))
                    }
                }

                function l(e) {
                    var t, n, a, r;
                    for (t = e, n = p.placeholder; b > t; t++) if (g[t]) {
                        if (a = o(t), r = d[t], d[t] = n, !(b > a && g[a].test(r))) break;
                        n = r
                    }
                }

                function e(e) {
                    var t, n, a, r = e.which;
                    8 === r || 46 === r || R && 127 === r ? (t = h.caret(), n = t.begin, a = t.end, 0 === a - n && (n = 46 !== r ? i(n) : a = o(n - 1), a = 46 === r ? o(a) : a), s(n, a), c(n, a - 1), e.preventDefault()) : 27 == r && (h.val(m), h.caret(0, f()), e.preventDefault())
                }

                function t(e) {
                    var t, n, a, r = e.which, i = h.caret();
                    e.ctrlKey || e.altKey || e.metaKey || 32 > r || r && (0 !== i.end - i.begin && (s(i.begin, i.end), c(i.begin, i.end - 1)), t = o(i.begin - 1), b > t && (n = String.fromCharCode(r), g[t].test(n) && (l(t), d[t] = n, u(), a = o(t), S ? setTimeout(y.proxy(y.fn.caret, h, a), 0) : h.caret(a), p.completed && a >= b && p.completed.call(h))), e.preventDefault())
                }

                function s(e, t) {
                    var n;
                    for (n = e; t > n && b > n; n++) g[n] && (d[n] = p.placeholder)
                }

                function u() {
                    h.val(d.join(""))
                }

                function f(e) {
                    var t, n, a = h.val(), r = -1;
                    for (t = 0, pos = 0; b > t; t++) if (g[t]) {
                        for (d[t] = p.placeholder; pos++ < a.length;) if (n = a.charAt(pos - 1), g[t].test(n)) {
                            d[t] = n, r = t;
                            break
                        }
                        if (pos > a.length) break
                    } else d[t] === a.charAt(pos) && t !== v && (pos++, r = t);
                    return e ? u() : v > r + 1 ? (h.val(""), s(0, b)) : (u(), h.val(h.val().substring(0, r + 1))), v ? t : k
                }

                var h = y(this), d = y.map(n.split(""), function (e) {
                    return "?" != e ? a[e] ? p.placeholder : e : void 0
                }), m = h.val();
                h.data(y.mask.dataName, function () {
                    return y.map(d, function (e, t) {
                        return g[t] && e != p.placeholder ? e : null
                    }).join("")
                }), h.attr("readonly") || h.one("unmask", function () {
                    h.unbind(".mask").removeData(y.mask.dataName)
                }).bind("focus.mask", function () {
                    clearTimeout(r);
                    var e;
                    m = h.val(), e = f(), r = setTimeout(function () {
                        u(), e == n.length ? h.caret(0, e) : h.caret(e)
                    }, 10)
                }).bind("blur.mask", function () {
                    f(), h.val() != m && h.change()
                }).bind("keydown.mask", e).bind("keypress.mask", t).bind(x, function () {
                    setTimeout(function () {
                        var e = f(!0);
                        h.caret(e), p.completed && e == h.val().length && p.completed.call(h)
                    }, 0)
                }), f()
            }))
        }
    })
})(jQuery);